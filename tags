!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	md5/md5.h	/^    MD5_LONG A, B, C, D;$/;"	m	struct:MD5state_st
ADDSEQ	Z_my_work_atom/tcp_server.h	16;"	d
AE_ALL_EVENTS	ae/ae.h	47;"	d
AE_DELETED_EVENT_ID	ae/ae.h	51;"	d
AE_DONT_WAIT	ae/ae.h	48;"	d
AE_ERR	ae/ae.h	39;"	d
AE_FILE_EVENTS	ae/ae.h	45;"	d
AE_NOMORE	ae/ae.h	50;"	d
AE_NONE	ae/ae.h	41;"	d
AE_NOTUSED	ae/ae.h	54;"	d
AE_OK	ae/ae.h	38;"	d
AE_READABLE	ae/ae.h	42;"	d
AE_TIME_EVENTS	ae/ae.h	46;"	d
AE_WRITABLE	ae/ae.h	43;"	d
AF_LOCAL	netTool/anet.h	45;"	d
ALL_cmd	Z_my_work_memcached/cmd.c	/^Response * ALL_cmd(ClientStat *client)$/;"	f
ANET_CONNECT_BE_BINDING	netTool/anet.c	266;"	d	file:
ANET_CONNECT_NONBLOCK	netTool/anet.c	265;"	d	file:
ANET_CONNECT_NONE	netTool/anet.c	264;"	d	file:
ANET_ERR	netTool/anet.h	37;"	d
ANET_ERR_LEN	netTool/anet.h	38;"	d
ANET_H	netTool/anet.h	32;"	d
ANET_IP_ONLY	netTool/anet.h	42;"	d
ANET_NONE	netTool/anet.h	41;"	d
ANET_OK	netTool/anet.h	36;"	d
APP_NET_TCP_STATE	Z_my_work_dvoUpgrade/test_client.c	/^}APP_NET_TCP_STATE;$/;"	t	typeref:enum:__anon8	file:
APP_NET_TCP_STATE_FAIL	Z_my_work_dvoUpgrade/test_client.c	/^    APP_NET_TCP_STATE_FAIL,$/;"	e	enum:__anon8	file:
APP_NET_TCP_STATE_SUCCESS	Z_my_work_dvoUpgrade/test_client.c	/^    APP_NET_TCP_STATE_SUCCESS = 0,$/;"	e	enum:__anon8	file:
B	md5/md5.h	/^    MD5_LONG A, B, C, D;$/;"	m	struct:MD5state_st
BLOCK_SIZE	Z_my_work_dvoUpgrade/test_client.c	31;"	d	file:
BUILD_DIR	Z_my_work_atom/Makefile	/^BUILD_DIR = ..\/build$/;"	m
BUILD_DIR	Z_my_work_dvoUpgrade/Makefile	/^BUILD_DIR = ..\/build$/;"	m
BUILD_DIR	Z_my_work_memcached/Makefile	/^BUILD_DIR = ..\/build$/;"	m
BUILD_DIR	Z_my_work_memcached/test_client/Makefile	/^BUILD_DIR = ..\/..\/build$/;"	m
BUILD_MSG_HEADER	Z_my_work_dvoUpgrade/test_client.c	63;"	d	file:
BUILD_MSG_HEADER2	Z_my_work_dvoUpgrade/test_client.c	77;"	d	file:
BYTE_ORDER	Z_my_work_memcached/test_client/md5.c	57;"	d	file:
BYTE_ORDER	Z_my_work_memcached/test_client/md5.c	59;"	d	file:
BYTE_ORDER	Z_my_work_memcached/test_client/md5.c	61;"	d	file:
C	md5/md5.h	/^    MD5_LONG A, B, C, D;$/;"	m	struct:MD5state_st
CFLAGS	Z_my_work_atom/Makefile	/^CFLAGS = -I$(BUILD_DIR)$/;"	m
CFLAGS	Z_my_work_dvoUpgrade/Makefile	/^CFLAGS = -I$(BUILD_DIR)$/;"	m
CFLAGS	Z_my_work_memcached/Makefile	/^CFLAGS = -I$(BUILD_DIR)$/;"	m
CFLAGS	Z_my_work_memcached/test_client/Makefile	/^CFLAGS = -I$(BUILD_DIR)$/;"	m
CLIENT_RECV_CMD_LENGTH	Z_my_work_atom/defines.h	12;"	d
CLIENT_RECV_CMD_LENGTH	Z_my_work_memcached/defines.h	12;"	d
CLIENT_RECV_CMD_LENGTH	Z_my_work_memcached/test_client/defines.h	12;"	d
CLIENT_RECV_CMD_MAX	Z_my_work_atom/defines.h	15;"	d
CLIENT_RECV_CMD_MAX	Z_my_work_memcached/defines.h	15;"	d
CLIENT_RECV_CMD_MAX	Z_my_work_memcached/test_client/defines.h	15;"	d
CLIENT_SEND_RESPONSE_LENGTH	Z_my_work_atom/defines.h	13;"	d
CLIENT_SEND_RESPONSE_LENGTH	Z_my_work_memcached/defines.h	13;"	d
CLIENT_SEND_RESPONSE_LENGTH	Z_my_work_memcached/test_client/defines.h	13;"	d
CLIENT_SEND_RESPONSE_MAX	Z_my_work_atom/defines.h	16;"	d
CLIENT_SEND_RESPONSE_MAX	Z_my_work_memcached/defines.h	16;"	d
CLIENT_SEND_RESPONSE_MAX	Z_my_work_memcached/test_client/defines.h	16;"	d
CMD_ARGS_MAX	Z_my_work_atom/defines.h	18;"	d
CMD_ARGS_MAX	Z_my_work_memcached/defines.h	18;"	d
CMD_ARGS_MAX	Z_my_work_memcached/test_client/defines.h	18;"	d
ClientQueue	Z_my_work_atom/tcp_server.c	/^ClientStat *ClientQueue = NULL;$/;"	v
ClientQueue	Z_my_work_memcached/tcp_server.c	/^ClientStat *ClientQueue = NULL;$/;"	v
ClientStat	Z_my_work_atom/tcp_server.h	/^}ClientStat;$/;"	t	typeref:struct:ClientStat_s
ClientStat	Z_my_work_memcached/tcp_server.h	/^}ClientStat;$/;"	t	typeref:struct:ClientStat_s
ClientStat_s	Z_my_work_atom/tcp_server.h	/^typedef struct ClientStat_s$/;"	s
ClientStat_s	Z_my_work_memcached/tcp_server.h	/^typedef struct ClientStat_s$/;"	s
Client_socket	Z_my_work_atom/test_client.c	/^int Client_socket = 0 ;$/;"	v
Client_socket	Z_my_work_memcached/test_client/test_client.c	/^int Client_socket = -1;$/;"	v
Cmd	Z_my_work_memcached/tcp_server.h	/^}Cmd;$/;"	t	typeref:struct:Cmd_s
CmdComplete	Z_my_work_memcached/tcp_server.h	/^static inline int CmdComplete(ClientStat * client,Cmd * cmd)$/;"	f
CmdCount	Z_my_work_memcached/tcp_server.h	/^static inline int CmdCount(ClientStat *client)$/;"	f
CmdDeleteHead	Z_my_work_memcached/tcp_server.h	130;"	d
CmdHead	Z_my_work_memcached/tcp_server.h	142;"	d
CmdInsert	Z_my_work_memcached/tcp_server.h	118;"	d
CmdSubType	Z_my_work_dvoUpgrade/test_client.c	/^        uint16_t  CmdSubType;$/;"	m	struct:tagMsgHead_t	file:
CmdType	Z_my_work_dvoUpgrade/test_client.c	/^        uint16_t  CmdType;$/;"	m	struct:tagMsgHead_t	file:
Cmd_s	Z_my_work_memcached/tcp_server.h	/^typedef struct Cmd_s$/;"	s
D	md5/md5.h	/^    MD5_LONG A, B, C, D;$/;"	m	struct:MD5state_st
DATA_ORDER_IS_LITTLE_ENDIAN	md5/md5_locl.h	28;"	d
DATA_TYPE_CMD	Z_my_work_dvoUpgrade/test_client.c	34;"	d	file:
DEFAULT_DICT_SIZE	Z_my_work_atom/defines.h	20;"	d
DEFAULT_DICT_SIZE	Z_my_work_memcached/defines.h	20;"	d
DEFAULT_DICT_SIZE	Z_my_work_memcached/test_client/defines.h	20;"	d
DEFS	ae/Makefile	/^DEFS = -DHAVE_EPOLL   	#HAVE_SELECT  HAVE_EPOLL HAVE_KQUEUE HAVE_EVPORT$/;"	m
DICT_ERR	redis_dict/dict.h	42;"	d
DICT_HT_INITIAL_SIZE	redis_dict/dict.h	103;"	d
DICT_NOTUSED	redis_dict/dict.h	45;"	d
DICT_OK	redis_dict/dict.h	41;"	d
DICT_STATS_VECTLEN	redis_dict/dict.c	1008;"	d	file:
DataType	Z_my_work_dvoUpgrade/test_client.c	/^        uint16_t  DataType;$/;"	m	struct:tagMsgHead_t	file:
Dict	Z_my_work_memcached/cmd.c	/^dict * Dict = NULL;$/;"	v
DictItem	Z_my_work_memcached/tcp_server.h	/^}DictItem;$/;"	t	typeref:struct:__anon13
ERR_CMD	Z_my_work_atom/cmd.h	14;"	d
ERR_SENDBUFFERFULL_CMD	Z_my_work_atom/cmd.h	19;"	d
F	Z_my_work_memcached/test_client/md5.c	202;"	d	file:
F	md5/md5_locl.h	57;"	d
FILTER_OUT	Z_my_work_atom/Makefile	/^FILTER_OUT = .\/test_client.o$/;"	m
FILTER_OUT	Z_my_work_dvoUpgrade/Makefile	/^FILTER_OUT = .\/dvo_ipc_update.o$/;"	m
G	Z_my_work_memcached/test_client/md5.c	228;"	d	file:
G	md5/md5_locl.h	58;"	d
GET_cmd	Z_my_work_memcached/cmd.c	/^Response* GET_cmd(Cmd *cmd)$/;"	f
H	Z_my_work_memcached/test_client/md5.c	254;"	d	file:
H	md5/md5_locl.h	59;"	d
HASH_BLOCK_DATA_ORDER	md5/md5_locl.h	43;"	d
HASH_CBLOCK	md5/md5_locl.h	32;"	d
HASH_CTX	md5/md5_locl.h	31;"	d
HASH_FINAL	md5/md32_common.h	/^int HASH_FINAL(unsigned char *md, HASH_CTX *c)$/;"	f
HASH_FINAL	md5/md5_locl.h	35;"	d
HASH_LONG	md5/md5_locl.h	30;"	d
HASH_MAKE_STRING	md5/md5_locl.h	36;"	d
HASH_TRANSFORM	md5/md32_common.h	/^void HASH_TRANSFORM(HASH_CTX *c, const unsigned char *data)$/;"	f
HASH_TRANSFORM	md5/md5_locl.h	34;"	d
HASH_UPDATE	md5/md32_common.h	/^int HASH_UPDATE(HASH_CTX *c, const void *data_, size_t len)$/;"	f
HASH_UPDATE	md5/md5_locl.h	33;"	d
HEADER_MD5_H	md5/md5.h	11;"	d
HOST_c2l	md5/md32_common.h	160;"	d
HOST_c2l	md5/md32_common.h	170;"	d
HOST_c2l	md5/md32_common.h	181;"	d
HOST_c2l	md5/md32_common.h	188;"	d
HOST_c2l	md5/md32_common.h	194;"	d
HOST_c2l	md5/md32_common.h	212;"	d
HOST_c2l	md5/md32_common.h	223;"	d
HOST_c2l	md5/md32_common.h	230;"	d
HOST_l2c	md5/md32_common.h	163;"	d
HOST_l2c	md5/md32_common.h	175;"	d
HOST_l2c	md5/md32_common.h	182;"	d
HOST_l2c	md5/md32_common.h	189;"	d
HOST_l2c	md5/md32_common.h	200;"	d
HOST_l2c	md5/md32_common.h	215;"	d
HOST_l2c	md5/md32_common.h	224;"	d
HOST_l2c	md5/md32_common.h	236;"	d
Hwtype	Z_my_work_dvoUpgrade/test_client.c	/^        uint16_t  Hwtype;$/;"	m	struct:tagMsgHead_t	file:
I	Z_my_work_memcached/test_client/md5.c	280;"	d	file:
I	md5/md5_locl.h	60;"	d
INIT_DATA_A	md5/md5_dgst.c	17;"	d	file:
INIT_DATA_B	md5/md5_dgst.c	18;"	d	file:
INIT_DATA_C	md5/md5_dgst.c	19;"	d	file:
INIT_DATA_D	md5/md5_dgst.c	20;"	d	file:
INSTALL_DIR	ae/Makefile	/^INSTALL_DIR = ..\/build$/;"	m
INSTALL_DIR	log/Makefile	/^INSTALL_DIR = ..\/build$/;"	m
INSTALL_DIR	md5/Makefile	/^INSTALL_DIR = ..\/build$/;"	m
INSTALL_DIR	netTool/Makefile	/^INSTALL_DIR = ..\/build$/;"	m
INSTALL_DIR	redis_dict/Makefile	/^INSTALL_DIR = ..\/build$/;"	m
KETAMA_LIBKETAMA_KETAMA_H__	Z_my_work_memcached/test_client/ketama.h	30;"	d
LDFLAGS	Z_my_work_atom/Makefile	/^LDFLAGS = -L$(BUILD_DIR) -lae -llog -lmd5 -lnetool -ldict -lpthread$/;"	m
LDFLAGS	Z_my_work_dvoUpgrade/Makefile	/^LDFLAGS = -L$(BUILD_DIR) -lae -llog -lmd5 -lnetool -ldict -lpthread -lm$/;"	m
LDFLAGS	Z_my_work_memcached/Makefile	/^LDFLAGS = -L$(BUILD_DIR) -lae -llog -lmd5 -lnetool -ldict$/;"	m
LDFLAGS	Z_my_work_memcached/test_client/Makefile	/^LDFLAGS = -L$(BUILD_DIR) -lae -llog -lmd5 -lnetool -ldict -lm$/;"	m
LOG_ALERT	log/log.h	/^    LOG_ALERT,$/;"	e	enum:__anon1
LOG_ERROR	log/log.h	/^    LOG_ERROR$/;"	e	enum:__anon1
LOG_FILE_NAME	log/log.h	11;"	d
LOG_LEVEL	log/log.h	/^}LOG_LEVEL;$/;"	t	typeref:enum:__anon1
LOG_NOTICE	log/log.h	/^    LOG_NOTICE = 0,$/;"	e	enum:__anon1
LotDataAtom	Z_my_work_atom/test_client.c	/^}LotDataAtom;$/;"	t	typeref:struct:__anon6	file:
LotHead	Z_my_work_atom/test_client.c	/^}LotHead;$/;"	t	typeref:struct:__anon4	file:
LotMsg	Z_my_work_atom/test_client.c	/^}LotMsg;$/;"	t	typeref:struct:__anon5	file:
MAGIC_STRING_HEADER	Z_my_work_dvoUpgrade/test_client.c	30;"	d	file:
MAX_EVENT_BATCHSZ	ae/ae/ae_evport.c	66;"	d	file:
MC_SHMSIZE	Z_my_work_memcached/test_client/ketama.h	34;"	d
MD32_REG_T	md5/md32_common.h	356;"	d
MD32_REG_T	md5/md32_common.h	382;"	d
MD5_CBLOCK	md5/md5.h	29;"	d
MD5_CTX	md5/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:MD5state_st
MD5_DIGEST_LENGTH	md5/md5.h	31;"	d
MD5_Init	md5/md5_dgst.c	/^int MD5_Init(MD5_CTX *c)$/;"	f
MD5_LBLOCK	md5/md5.h	30;"	d
MD5_LONG	md5/md5.h	27;"	d
MD5state_st	md5/md5.h	/^typedef struct MD5state_st {$/;"	s
MSG_HEADER_LEN	Z_my_work_dvoUpgrade/test_client.c	61;"	d	file:
Magic1	Z_my_work_dvoUpgrade/test_client.c	/^        char Magic1[4];$/;"	m	struct:tagMsgHead_t	file:
NET_SYS	Z_my_work_dvoUpgrade/test_client.c	35;"	d	file:
Nh	md5/md5.h	/^    MD5_LONG Nl, Nh;$/;"	m	struct:MD5state_st
Nl	md5/md5.h	/^    MD5_LONG Nl, Nh;$/;"	m	struct:MD5state_st
OBJ	Z_my_work_atom/Makefile	/^OBJ=$(filter-out $(FILTER_OUT),$(OBJ_s))$/;"	m
OBJ	Z_my_work_dvoUpgrade/Makefile	/^OBJ=$(filter-out $(FILTER_OUT),$(OBJ_s))$/;"	m
OBJ	Z_my_work_memcached/Makefile	/^OBJ = $(patsubst %.c,%.o,$(wildcard .\/*.c))$/;"	m
OBJ	Z_my_work_memcached/test_client/Makefile	/^OBJ = $(patsubst %.c,%.o,$(wildcard .\/*.c))$/;"	m
OBJ	ae/Makefile	/^OBJ = ae.o$/;"	m
OBJ	log/Makefile	/^OBJ = $(patsubst %.c,%.o,$(wildcard .\/*.c))$/;"	m
OBJ	md5/Makefile	/^OBJ = $(patsubst %.c,%.o,$(wildcard .\/*.c))$/;"	m
OBJ	netTool/Makefile	/^OBJ = $(patsubst %.c,%.o,$(wildcard .\/*.c))$/;"	m
OBJ	redis_dict/Makefile	/^OBJ = $(patsubst %.c,%.o,$(wildcard .\/*.c))$/;"	m
OBJ_s	Z_my_work_atom/Makefile	/^OBJ_s = $(patsubst %.c,%.o,$(wildcard .\/*.c))$/;"	m
OBJ_s	Z_my_work_dvoUpgrade/Makefile	/^OBJ_s = $(patsubst %.c,%.o,$(wildcard .\/*.c))$/;"	m
PID_FILE_NAME	Z_my_work_atom/defines.h	22;"	d
PID_FILE_NAME	Z_my_work_memcached/defines.h	22;"	d
PID_FILE_NAME	Z_my_work_memcached/test_client/defines.h	22;"	d
Pktlen	Z_my_work_dvoUpgrade/test_client.c	/^        uint32_t  Pktlen;$/;"	m	struct:tagMsgHead_t	file:
R0	md5/md5_locl.h	62;"	d
R1	md5/md5_locl.h	67;"	d
R2	md5/md5_locl.h	72;"	d
R3	md5/md5_locl.h	77;"	d
READ_BUF_SIZE	Z_my_work_memcached/test_client/test_client.c	104;"	d	file:
RECV_CMD	Z_my_work_atom/cmd.h	18;"	d
ROTATE	md5/md32_common.h	101;"	d
ROTATE	md5/md32_common.h	104;"	d
ROTATE	md5/md32_common.h	106;"	d
ROTATE	md5/md32_common.h	115;"	d
ROTATE	md5/md32_common.h	125;"	d
ROTATE	md5/md32_common.h	133;"	d
ROTATE	md5/md32_common.h	144;"	d
ROTATE_LEFT	Z_my_work_memcached/test_client/md5.c	197;"	d	file:
Response	Z_my_work_memcached/tcp_server.h	/^}Response;$/;"	t	typeref:struct:Response_s
ResponseCount	Z_my_work_memcached/tcp_server.h	/^static inline int ResponseCount(ClientStat *client)$/;"	f
ResponseDeleteHead	Z_my_work_memcached/tcp_server.h	90;"	d
ResponseHead	Z_my_work_memcached/tcp_server.h	89;"	d
ResponseInsert	Z_my_work_memcached/tcp_server.h	74;"	d
Response_s	Z_my_work_memcached/tcp_server.h	/^typedef struct Response_s $/;"	s
Rev1	Z_my_work_dvoUpgrade/test_client.c	/^        uint16_t  Rev1;$/;"	m	struct:tagMsgHead_t	file:
Rev2	Z_my_work_dvoUpgrade/test_client.c	/^        uint32_t  Rev2;$/;"	m	struct:tagMsgHead_t	file:
Rev3	Z_my_work_dvoUpgrade/test_client.c	/^        uint32_t  Rev3;$/;"	m	struct:tagMsgHead_t	file:
SEND_CMD	Z_my_work_atom/cmd.h	17;"	d
SERVER_PORT	Z_my_work_atom/defines.h	11;"	d
SERVER_PORT	Z_my_work_atom/test_client.c	24;"	d	file:
SERVER_PORT	Z_my_work_dvoUpgrade/test_client.c	33;"	d	file:
SERVER_PORT	Z_my_work_memcached/defines.h	11;"	d
SERVER_PORT	Z_my_work_memcached/test_client/defines.h	11;"	d
SET	Z_my_work_memcached/test_client/md5.c	203;"	d	file:
SET	Z_my_work_memcached/test_client/md5.c	223;"	d	file:
SET	Z_my_work_memcached/test_client/md5.c	229;"	d	file:
SET	Z_my_work_memcached/test_client/md5.c	249;"	d	file:
SET	Z_my_work_memcached/test_client/md5.c	255;"	d	file:
SET	Z_my_work_memcached/test_client/md5.c	275;"	d	file:
SET	Z_my_work_memcached/test_client/md5.c	281;"	d	file:
SET	Z_my_work_memcached/test_client/md5.c	301;"	d	file:
SET_cmd	Z_my_work_memcached/cmd.c	/^Response * SET_cmd(Cmd *cmd)$/;"	f
SND_BUFSIZE	Z_my_work_dvoUpgrade/test_client.c	269;"	d	file:
SUCCESS_CMD	Z_my_work_atom/cmd.h	15;"	d
SYS_NUCLEAR_UPDATE	Z_my_work_dvoUpgrade/test_client.c	36;"	d	file:
ServerStat	Z_my_work_atom/tcp_server.h	/^}ServerStat;$/;"	t	typeref:struct:__anon3
ServerStat	Z_my_work_memcached/tcp_server.h	/^}ServerStat;$/;"	t	typeref:struct:__anon12
Sn	Z_my_work_dvoUpgrade/test_client.c	/^        uint32_t  Sn;$/;"	m	struct:tagMsgHead_t	file:
T1	Z_my_work_memcached/test_client/md5.c	65;"	d	file:
T10	Z_my_work_memcached/test_client/md5.c	74;"	d	file:
T11	Z_my_work_memcached/test_client/md5.c	75;"	d	file:
T12	Z_my_work_memcached/test_client/md5.c	76;"	d	file:
T13	Z_my_work_memcached/test_client/md5.c	77;"	d	file:
T14	Z_my_work_memcached/test_client/md5.c	78;"	d	file:
T15	Z_my_work_memcached/test_client/md5.c	79;"	d	file:
T16	Z_my_work_memcached/test_client/md5.c	80;"	d	file:
T17	Z_my_work_memcached/test_client/md5.c	81;"	d	file:
T18	Z_my_work_memcached/test_client/md5.c	82;"	d	file:
T19	Z_my_work_memcached/test_client/md5.c	83;"	d	file:
T2	Z_my_work_memcached/test_client/md5.c	66;"	d	file:
T20	Z_my_work_memcached/test_client/md5.c	84;"	d	file:
T21	Z_my_work_memcached/test_client/md5.c	85;"	d	file:
T22	Z_my_work_memcached/test_client/md5.c	86;"	d	file:
T23	Z_my_work_memcached/test_client/md5.c	87;"	d	file:
T24	Z_my_work_memcached/test_client/md5.c	88;"	d	file:
T25	Z_my_work_memcached/test_client/md5.c	89;"	d	file:
T26	Z_my_work_memcached/test_client/md5.c	90;"	d	file:
T27	Z_my_work_memcached/test_client/md5.c	91;"	d	file:
T28	Z_my_work_memcached/test_client/md5.c	92;"	d	file:
T29	Z_my_work_memcached/test_client/md5.c	93;"	d	file:
T3	Z_my_work_memcached/test_client/md5.c	67;"	d	file:
T30	Z_my_work_memcached/test_client/md5.c	94;"	d	file:
T31	Z_my_work_memcached/test_client/md5.c	95;"	d	file:
T32	Z_my_work_memcached/test_client/md5.c	96;"	d	file:
T33	Z_my_work_memcached/test_client/md5.c	97;"	d	file:
T34	Z_my_work_memcached/test_client/md5.c	98;"	d	file:
T35	Z_my_work_memcached/test_client/md5.c	99;"	d	file:
T36	Z_my_work_memcached/test_client/md5.c	100;"	d	file:
T37	Z_my_work_memcached/test_client/md5.c	101;"	d	file:
T38	Z_my_work_memcached/test_client/md5.c	102;"	d	file:
T39	Z_my_work_memcached/test_client/md5.c	103;"	d	file:
T4	Z_my_work_memcached/test_client/md5.c	68;"	d	file:
T40	Z_my_work_memcached/test_client/md5.c	104;"	d	file:
T41	Z_my_work_memcached/test_client/md5.c	105;"	d	file:
T42	Z_my_work_memcached/test_client/md5.c	106;"	d	file:
T43	Z_my_work_memcached/test_client/md5.c	107;"	d	file:
T44	Z_my_work_memcached/test_client/md5.c	108;"	d	file:
T45	Z_my_work_memcached/test_client/md5.c	109;"	d	file:
T46	Z_my_work_memcached/test_client/md5.c	110;"	d	file:
T47	Z_my_work_memcached/test_client/md5.c	111;"	d	file:
T48	Z_my_work_memcached/test_client/md5.c	112;"	d	file:
T49	Z_my_work_memcached/test_client/md5.c	113;"	d	file:
T5	Z_my_work_memcached/test_client/md5.c	69;"	d	file:
T50	Z_my_work_memcached/test_client/md5.c	114;"	d	file:
T51	Z_my_work_memcached/test_client/md5.c	115;"	d	file:
T52	Z_my_work_memcached/test_client/md5.c	116;"	d	file:
T53	Z_my_work_memcached/test_client/md5.c	117;"	d	file:
T54	Z_my_work_memcached/test_client/md5.c	118;"	d	file:
T55	Z_my_work_memcached/test_client/md5.c	119;"	d	file:
T56	Z_my_work_memcached/test_client/md5.c	120;"	d	file:
T57	Z_my_work_memcached/test_client/md5.c	121;"	d	file:
T58	Z_my_work_memcached/test_client/md5.c	122;"	d	file:
T59	Z_my_work_memcached/test_client/md5.c	123;"	d	file:
T6	Z_my_work_memcached/test_client/md5.c	70;"	d	file:
T60	Z_my_work_memcached/test_client/md5.c	124;"	d	file:
T61	Z_my_work_memcached/test_client/md5.c	125;"	d	file:
T62	Z_my_work_memcached/test_client/md5.c	126;"	d	file:
T63	Z_my_work_memcached/test_client/md5.c	127;"	d	file:
T64	Z_my_work_memcached/test_client/md5.c	128;"	d	file:
T7	Z_my_work_memcached/test_client/md5.c	71;"	d	file:
T8	Z_my_work_memcached/test_client/md5.c	72;"	d	file:
T9	Z_my_work_memcached/test_client/md5.c	73;"	d	file:
TARGET	Z_my_work_atom/Makefile	/^TARGET = ae_main$/;"	m
TARGET	Z_my_work_dvoUpgrade/Makefile	/^TARGET =dvoUpgrade$/;"	m
TARGET	Z_my_work_memcached/Makefile	/^TARGET = ae_main$/;"	m
TARGET	Z_my_work_memcached/test_client/Makefile	/^TARGET = ae_client$/;"	m
TARGET	ae/Makefile	/^TARGET = libae.a$/;"	m
TARGET	log/Makefile	/^TARGET = liblog.a$/;"	m
TARGET	md5/Makefile	/^TARGET = libmd5.a$/;"	m
TARGET	netTool/Makefile	/^TARGET = libnetool.a$/;"	m
TARGET	redis_dict/Makefile	/^TARGET = libdict.a$/;"	m
T_MASK	Z_my_work_memcached/test_client/md5.c	64;"	d	file:
Version	Z_my_work_dvoUpgrade/test_client.c	/^        uint16_t  Version;$/;"	m	struct:tagMsgHead_t	file:
X	md5/md5_dgst.c	34;"	d	file:
X	md5/md5_dgst.c	44;"	d	file:
_CMD_H	Z_my_work_atom/cmd.h	9;"	d
_CMD_H	Z_my_work_memcached/cmd.h	9;"	d
_DEFINES_H	Z_my_work_atom/defines.h	9;"	d
_DEFINES_H	Z_my_work_memcached/defines.h	9;"	d
_DEFINES_H	Z_my_work_memcached/test_client/defines.h	9;"	d
_LOG_H	log/log.h	9;"	d
_NETTOOL_H	netTool/netTool.h	9;"	d
_TCP_SERVER_H	Z_my_work_atom/tcp_server.h	9;"	d
_TCP_SERVER_H	Z_my_work_memcached/tcp_server.h	9;"	d
__AE_H__	ae/ae.h	34;"	d
__DICT_H	redis_dict/dict.h	39;"	d
_anetTcpServer	netTool/anet.c	/^static int _anetTcpServer(char *err, int port, char *bindaddr, int af, int backlog)$/;"	f	file:
_bits	Z_my_work_memcached/test_client/test_client.c	/^int _bits(int data)$/;"	f
_check_cmd_complete2	Z_my_work_memcached/tcp_server.c	/^int _check_cmd_complete2(aeEventLoop *eventloop,ClientStat *_stat,int total_len)$/;"	f
_clientFreebuf	Z_my_work_memcached/tcp_server.c	/^void _clientFreebuf(ClientStat *client)$/;"	f
_debug_print_client_cmd	Z_my_work_memcached/tcp_server.c	/^void _debug_print_client_cmd(ClientStat * client)$/;"	f
_debug_print_string	Z_my_work_memcached/cmd.c	/^void _debug_print_string(char *str)$/;"	f
_dictClear	redis_dict/dict.c	/^int _dictClear(dict *d, dictht *ht, void(callback)(void *)) {$/;"	f
_dictExpandIfNeeded	redis_dict/dict.c	/^static int _dictExpandIfNeeded(dict *d)$/;"	f	file:
_dictGetStatsHt	redis_dict/dict.c	/^size_t _dictGetStatsHt(char *buf, size_t bufsize, dictht *ht, int tableid) {$/;"	f
_dictInit	redis_dict/dict.c	/^int _dictInit(dict *d, dictType *type,$/;"	f
_dictKeyIndex	redis_dict/dict.c	/^static int _dictKeyIndex(dict *d, const void *key)$/;"	f	file:
_dictNextPower	redis_dict/dict.c	/^static unsigned long _dictNextPower(unsigned long size)$/;"	f	file:
_dictRehashStep	redis_dict/dict.c	/^static void _dictRehashStep(dict *d) {$/;"	f	file:
_dictReset	redis_dict/dict.c	/^static void _dictReset(dictht *ht)$/;"	f	file:
_free_client_cur_cmd	Z_my_work_memcached/tcp_server.c	/^void _free_client_cur_cmd(ClientStat *client)$/;"	f
_get_err_response	Z_my_work_memcached/cmd.c	/^Response * _get_err_response()$/;"	f
_get_ok_response	Z_my_work_memcached/cmd.c	/^Response * _get_ok_response()$/;"	f
_my_print	Z_my_work_memcached/test_client/test_client.c	/^void _my_print(char *buf,int len)$/;"	f
_rfds	ae/ae/ae_select.c	/^    fd_set _rfds, _wfds;$/;"	m	struct:aeApiState	file:
_wfds	ae/ae/ae_select.c	/^    fd_set _rfds, _wfds;$/;"	m	struct:aeApiState	file:
abcd	Z_my_work_memcached/test_client/md5_2.h	/^    md5_word_t abcd[4];		\/* digest buffer *\/$/;"	m	struct:md5_state_s
add_hisiHead	Z_my_work_dvoUpgrade/test_client.c	/^int add_hisiHead(char *filename,char *hdversion)$/;"	f
addr	Z_my_work_atom/test_client.c	/^    uint16_t addr;$/;"	m	struct:__anon6	file:
addr	Z_my_work_memcached/test_client/ketama.h	/^    char addr[22];$/;"	m	struct:__anon10
aeAddMillisecondsToNow	ae/ae.c	/^static void aeAddMillisecondsToNow(long long milliseconds, long *sec, long *ms) {$/;"	f	file:
aeApiAddEvent	ae/ae/ae_epoll.c	/^static int aeApiAddEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiAddEvent	ae/ae/ae_evport.c	/^static int aeApiAddEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiAddEvent	ae/ae/ae_kqueue.c	/^static int aeApiAddEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiAddEvent	ae/ae/ae_select.c	/^static int aeApiAddEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiAssociate	ae/ae/ae_evport.c	/^static int aeApiAssociate(const char *where, int portfd, int fd, int mask) {$/;"	f	file:
aeApiCreate	ae/ae/ae_epoll.c	/^static int aeApiCreate(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiCreate	ae/ae/ae_evport.c	/^static int aeApiCreate(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiCreate	ae/ae/ae_kqueue.c	/^static int aeApiCreate(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiCreate	ae/ae/ae_select.c	/^static int aeApiCreate(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiDelEvent	ae/ae/ae_epoll.c	/^static void aeApiDelEvent(aeEventLoop *eventLoop, int fd, int delmask) {$/;"	f	file:
aeApiDelEvent	ae/ae/ae_evport.c	/^static void aeApiDelEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiDelEvent	ae/ae/ae_kqueue.c	/^static void aeApiDelEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiDelEvent	ae/ae/ae_select.c	/^static void aeApiDelEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiFree	ae/ae/ae_epoll.c	/^static void aeApiFree(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiFree	ae/ae/ae_evport.c	/^static void aeApiFree(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiFree	ae/ae/ae_kqueue.c	/^static void aeApiFree(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiFree	ae/ae/ae_select.c	/^static void aeApiFree(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiLookupPending	ae/ae/ae_evport.c	/^static int aeApiLookupPending(aeApiState *state, int fd) {$/;"	f	file:
aeApiName	ae/ae/ae_epoll.c	/^static char *aeApiName(void) {$/;"	f	file:
aeApiName	ae/ae/ae_evport.c	/^static char *aeApiName(void) {$/;"	f	file:
aeApiName	ae/ae/ae_kqueue.c	/^static char *aeApiName(void) {$/;"	f	file:
aeApiName	ae/ae/ae_select.c	/^static char *aeApiName(void) {$/;"	f	file:
aeApiPoll	ae/ae/ae_epoll.c	/^static int aeApiPoll(aeEventLoop *eventLoop, struct timeval *tvp) {$/;"	f	file:
aeApiPoll	ae/ae/ae_evport.c	/^static int aeApiPoll(aeEventLoop *eventLoop, struct timeval *tvp) {$/;"	f	file:
aeApiPoll	ae/ae/ae_kqueue.c	/^static int aeApiPoll(aeEventLoop *eventLoop, struct timeval *tvp) {$/;"	f	file:
aeApiPoll	ae/ae/ae_select.c	/^static int aeApiPoll(aeEventLoop *eventLoop, struct timeval *tvp) {$/;"	f	file:
aeApiResize	ae/ae/ae_epoll.c	/^static int aeApiResize(aeEventLoop *eventLoop, int setsize) {$/;"	f	file:
aeApiResize	ae/ae/ae_evport.c	/^static int aeApiResize(aeEventLoop *eventLoop, int setsize) {$/;"	f	file:
aeApiResize	ae/ae/ae_kqueue.c	/^static int aeApiResize(aeEventLoop *eventLoop, int setsize) {$/;"	f	file:
aeApiResize	ae/ae/ae_select.c	/^static int aeApiResize(aeEventLoop *eventLoop, int setsize) {$/;"	f	file:
aeApiState	ae/ae/ae_epoll.c	/^typedef struct aeApiState {$/;"	s	file:
aeApiState	ae/ae/ae_epoll.c	/^} aeApiState;$/;"	t	typeref:struct:aeApiState	file:
aeApiState	ae/ae/ae_evport.c	/^typedef struct aeApiState {$/;"	s	file:
aeApiState	ae/ae/ae_evport.c	/^} aeApiState;$/;"	t	typeref:struct:aeApiState	file:
aeApiState	ae/ae/ae_kqueue.c	/^typedef struct aeApiState {$/;"	s	file:
aeApiState	ae/ae/ae_kqueue.c	/^} aeApiState;$/;"	t	typeref:struct:aeApiState	file:
aeApiState	ae/ae/ae_select.c	/^typedef struct aeApiState {$/;"	s	file:
aeApiState	ae/ae/ae_select.c	/^} aeApiState;$/;"	t	typeref:struct:aeApiState	file:
aeBeforeSleepProc	ae/ae.h	/^typedef void aeBeforeSleepProc(struct aeEventLoop *eventLoop);$/;"	t
aeCreateEventLoop	ae/ae.c	/^aeEventLoop *aeCreateEventLoop(int setsize) {$/;"	f
aeCreateFileEvent	ae/ae.c	/^int aeCreateFileEvent(aeEventLoop *eventLoop, int fd, int mask,$/;"	f
aeCreateTimeEvent	ae/ae.c	/^long long aeCreateTimeEvent(aeEventLoop *eventLoop, long long milliseconds,$/;"	f
aeDeleteEventLoop	ae/ae.c	/^void aeDeleteEventLoop(aeEventLoop *eventLoop) {$/;"	f
aeDeleteFileEvent	ae/ae.c	/^void aeDeleteFileEvent(aeEventLoop *eventLoop, int fd, int mask)$/;"	f
aeDeleteTimeEvent	ae/ae.c	/^int aeDeleteTimeEvent(aeEventLoop *eventLoop, long long id)$/;"	f
aeEventFinalizerProc	ae/ae.h	/^typedef void aeEventFinalizerProc(struct aeEventLoop *eventLoop, void *clientData);$/;"	t
aeEventLoop	ae/ae.h	/^typedef struct aeEventLoop {$/;"	s
aeEventLoop	ae/ae.h	/^} aeEventLoop;$/;"	t	typeref:struct:aeEventLoop
aeFileEvent	ae/ae.h	/^typedef struct aeFileEvent {$/;"	s
aeFileEvent	ae/ae.h	/^} aeFileEvent;$/;"	t	typeref:struct:aeFileEvent
aeFileProc	ae/ae.h	/^typedef void aeFileProc(struct aeEventLoop *eventLoop, int fd, void *clientData, int mask);$/;"	t
aeFiredEvent	ae/ae.h	/^typedef struct aeFiredEvent {$/;"	s
aeFiredEvent	ae/ae.h	/^} aeFiredEvent;$/;"	t	typeref:struct:aeFiredEvent
aeGetApiName	ae/ae.c	/^char *aeGetApiName(void) {$/;"	f
aeGetFileEvents	ae/ae.c	/^int aeGetFileEvents(aeEventLoop *eventLoop, int fd) {$/;"	f
aeGetSetSize	ae/ae.c	/^int aeGetSetSize(aeEventLoop *eventLoop) {$/;"	f
aeGetTime	ae/ae.c	/^static void aeGetTime(long *seconds, long *milliseconds)$/;"	f	file:
aeMain	ae/ae.c	/^void aeMain(aeEventLoop *eventLoop) {$/;"	f
aeProcessEvents	ae/ae.c	/^int aeProcessEvents(aeEventLoop *eventLoop, int flags)$/;"	f
aeResizeSetSize	ae/ae.c	/^int aeResizeSetSize(aeEventLoop *eventLoop, int setsize) {$/;"	f
aeSearchNearestTimer	ae/ae.c	/^static aeTimeEvent *aeSearchNearestTimer(aeEventLoop *eventLoop)$/;"	f	file:
aeSetBeforeSleepProc	ae/ae.c	/^void aeSetBeforeSleepProc(aeEventLoop *eventLoop, aeBeforeSleepProc *beforesleep) {$/;"	f
aeStop	ae/ae.c	/^void aeStop(aeEventLoop *eventLoop) {$/;"	f
aeTimeEvent	ae/ae.h	/^typedef struct aeTimeEvent {$/;"	s
aeTimeEvent	ae/ae.h	/^} aeTimeEvent;$/;"	t	typeref:struct:aeTimeEvent
aeTimeProc	ae/ae.h	/^typedef int aeTimeProc(struct aeEventLoop *eventLoop, long long id, void *clientData);$/;"	t
aeWait	ae/ae.c	/^int aeWait(int fd, int mask, long long milliseconds) {$/;"	f
anetBlock	netTool/anet.c	/^int anetBlock(char *err, int fd) {$/;"	f
anetCreateSocket	netTool/anet.c	/^static int anetCreateSocket(char *err, int domain) {$/;"	f	file:
anetDisableTcpNoDelay	netTool/anet.c	/^int anetDisableTcpNoDelay(char *err, int fd)$/;"	f
anetEnableTcpNoDelay	netTool/anet.c	/^int anetEnableTcpNoDelay(char *err, int fd)$/;"	f
anetFormatAddr	netTool/anet.c	/^int anetFormatAddr(char *buf, size_t buf_len, char *ip, int port) {$/;"	f
anetFormatPeer	netTool/anet.c	/^int anetFormatPeer(int fd, char *buf, size_t buf_len) {$/;"	f
anetFormatSock	netTool/anet.c	/^int anetFormatSock(int fd, char *fmt, size_t fmt_len) {$/;"	f
anetGenericAccept	netTool/anet.c	/^static int anetGenericAccept(char *err, int s, struct sockaddr *sa, socklen_t *len) {$/;"	f	file:
anetGenericResolve	netTool/anet.c	/^int anetGenericResolve(char *err, char *host, char *ipbuf, size_t ipbuf_len,$/;"	f
anetKeepAlive	netTool/anet.c	/^int anetKeepAlive(char *err, int fd, int interval)$/;"	f
anetListen	netTool/anet.c	/^static int anetListen(char *err, int s, struct sockaddr *sa, socklen_t len, int backlog) {$/;"	f	file:
anetNonBlock	netTool/anet.c	/^int anetNonBlock(char *err, int fd) {$/;"	f
anetPeerToString	netTool/anet.c	/^int anetPeerToString(int fd, char *ip, size_t ip_len, int *port) {$/;"	f
anetRead	netTool/anet.c	/^int anetRead(int fd, char *buf, int count)$/;"	f
anetResolve	netTool/anet.c	/^int anetResolve(char *err, char *host, char *ipbuf, size_t ipbuf_len) {$/;"	f
anetResolveIP	netTool/anet.c	/^int anetResolveIP(char *err, char *host, char *ipbuf, size_t ipbuf_len) {$/;"	f
anetSendTimeout	netTool/anet.c	/^int anetSendTimeout(char *err, int fd, long long ms) {$/;"	f
anetSetBlock	netTool/anet.c	/^int anetSetBlock(char *err, int fd, int non_block) {$/;"	f
anetSetError	netTool/anet.c	/^static void anetSetError(char *err, const char *fmt, ...)$/;"	f	file:
anetSetReuseAddr	netTool/anet.c	/^static int anetSetReuseAddr(char *err, int fd) {$/;"	f	file:
anetSetSendBuffer	netTool/anet.c	/^int anetSetSendBuffer(char *err, int fd, int buffsize)$/;"	f
anetSetTcpNoDelay	netTool/anet.c	/^static int anetSetTcpNoDelay(char *err, int fd, int val)$/;"	f	file:
anetSockName	netTool/anet.c	/^int anetSockName(int fd, char *ip, size_t ip_len, int *port) {$/;"	f
anetTcp6Server	netTool/anet.c	/^int anetTcp6Server(char *err, int port, char *bindaddr, int backlog)$/;"	f
anetTcpAccept	netTool/anet.c	/^int anetTcpAccept(char *err, int s, char *ip, size_t ip_len, int *port) {$/;"	f
anetTcpConnect	netTool/anet.c	/^int anetTcpConnect(char *err, char *addr, int port)$/;"	f
anetTcpGenericConnect	netTool/anet.c	/^static int anetTcpGenericConnect(char *err, char *addr, int port,$/;"	f	file:
anetTcpKeepAlive	netTool/anet.c	/^int anetTcpKeepAlive(char *err, int fd)$/;"	f
anetTcpNonBlockBestEffortBindConnect	netTool/anet.c	/^int anetTcpNonBlockBestEffortBindConnect(char *err, char *addr, int port,$/;"	f
anetTcpNonBlockBindConnect	netTool/anet.c	/^int anetTcpNonBlockBindConnect(char *err, char *addr, int port,$/;"	f
anetTcpNonBlockConnect	netTool/anet.c	/^int anetTcpNonBlockConnect(char *err, char *addr, int port)$/;"	f
anetTcpServer	netTool/anet.c	/^int anetTcpServer(char *err, int port, char *bindaddr, int backlog)$/;"	f
anetUnixAccept	netTool/anet.c	/^int anetUnixAccept(char *err, int s) {$/;"	f
anetUnixConnect	netTool/anet.c	/^int anetUnixConnect(char *err, char *path)$/;"	f
anetUnixGenericConnect	netTool/anet.c	/^int anetUnixGenericConnect(char *err, char *path, int flags)$/;"	f
anetUnixNonBlockConnect	netTool/anet.c	/^int anetUnixNonBlockConnect(char *err, char *path)$/;"	f
anetUnixServer	netTool/anet.c	/^int anetUnixServer(char *err, char *path, mode_t perm, int backlog)$/;"	f
anetV6Only	netTool/anet.c	/^static int anetV6Only(char *err, int s) {$/;"	f	file:
anetWrite	netTool/anet.c	/^int anetWrite(int fd, char *buf, int count)$/;"	f
apidata	ae/ae.h	/^    void *apidata; \/* This is used for polling API specific data *\/$/;"	m	struct:aeEventLoop
app_net_tcp_sn_mac_t	Z_my_work_dvoUpgrade/test_client.c	/^struct app_net_tcp_sn_mac_t$/;"	s	file:
app_net_tcp_sys_update_head_t	Z_my_work_dvoUpgrade/test_client.c	/^}app_net_tcp_sys_update_head_t;$/;"	t	typeref:struct:__anon7	file:
args_num	Z_my_work_memcached/tcp_server.h	/^    int args_num;$/;"	m	struct:Cmd_s
args_num	Z_my_work_memcached/tcp_server.h	/^    int args_num;$/;"	m	struct:Response_s
array	Z_my_work_memcached/test_client/ketama.h	/^    ushort *array;        \/* used for GETALL and SETALL *\/$/;"	m	union:semun
array	Z_my_work_memcached/test_client/ketama.h	/^    void* array; \/\/array of mcs structs$/;"	m	struct:__anon11
beforesleep	ae/ae.h	/^    aeBeforeSleepProc *beforesleep;$/;"	m	struct:aeEventLoop
buf	Z_my_work_memcached/test_client/ketama.h	/^    struct semid_ds *buf; \/* for IPC_STAT and IPC_SET *\/$/;"	m	union:semun	typeref:struct:semun::semid_ds
buf	Z_my_work_memcached/test_client/md5_2.h	/^    md5_byte_t buf[64];		\/* accumulate block *\/$/;"	m	struct:md5_state_s
clientAdd	Z_my_work_atom/tcp_server.c	/^void clientAdd(ClientStat * tmp)$/;"	f
clientAdd	Z_my_work_memcached/tcp_server.c	/^void clientAdd(ClientStat * tmp)$/;"	f
clientData	ae/ae.h	/^    void *clientData;$/;"	m	struct:aeFileEvent
clientData	ae/ae.h	/^    void *clientData;$/;"	m	struct:aeTimeEvent
clientDelete	Z_my_work_atom/tcp_server.c	/^void clientDelete(ClientStat *tmp,struct aeEventLoop *eventloop)$/;"	f
clientDelete	Z_my_work_memcached/tcp_server.c	/^void clientDelete(ClientStat *tmp,struct aeEventLoop *eventloop)$/;"	f
client_address	Z_my_work_atom/test_client.c	/^char client_address [50] = {0};$/;"	v
client_fd	Z_my_work_atom/tcp_server.h	/^    int client_fd;$/;"	m	struct:__anon3
client_port	Z_my_work_atom/test_client.c	/^int client_port = 0;$/;"	v
clientfd	Z_my_work_atom/test_client.c	/^int clientfd = 0;$/;"	v
cmd	Z_my_work_atom/test_client.c	/^    uint8_t cmd;$/;"	m	struct:__anon4	file:
cmd	Z_my_work_memcached/tcp_server.h	116;"	d
compfn	Z_my_work_memcached/test_client/ketama.h	/^typedef int (*compfn)( const void*, const void* );$/;"	t
continuum	Z_my_work_memcached/test_client/ketama.h	/^} continuum;$/;"	t	typeref:struct:__anon11
count	Z_my_work_memcached/test_client/md5_2.h	/^    md5_word_t count[2];	\/* message length in bits, lsw first *\/$/;"	m	struct:md5_state_s
crc	Z_my_work_dvoUpgrade/test_client.c	/^    uint32_t crc;$/;"	m	struct:__anon7	file:
crc32	Z_my_work_dvoUpgrade/test_client.c	/^unsigned int crc32(const void *buf, unsigned int size)$/;"	f
crc32_tab	Z_my_work_dvoUpgrade/test_client.c	/^const unsigned int crc32_tab[] = {$/;"	v
create_pid_file	Z_my_work_atom/main.c	/^void create_pid_file()$/;"	f
create_pid_file	Z_my_work_memcached/main.c	/^void create_pid_file()$/;"	f
cur_cmd_item	Z_my_work_memcached/tcp_server.h	/^    Cmd *cur_cmd_item;$/;"	m	struct:ClientStat_s
cur_frame	Z_my_work_dvoUpgrade/test_client.c	/^    int cur_frame;$/;"	m	struct:__anon7	file:
cur_item	Z_my_work_memcached/tcp_server.h	/^    int cur_item;$/;"	m	struct:Cmd_s
cur_item	Z_my_work_memcached/tcp_server.h	/^    int cur_item;$/;"	m	struct:Response_s
d	redis_dict/dict.h	/^        double d;$/;"	m	union:dictEntry::__anon2
d	redis_dict/dict.h	/^    dict *d;$/;"	m	struct:dictIterator
daemonize	Z_my_work_atom/main.c	/^void daemonize()$/;"	f
daemonize	Z_my_work_memcached/main.c	/^void daemonize()$/;"	f
data	Z_my_work_atom/test_client.c	/^    uint8_t *data;$/;"	m	struct:__anon5	file:
data	md5/md5.h	/^    MD5_LONG data[MD5_LBLOCK];$/;"	m	struct:MD5state_st
device_func	Z_my_work_atom/cmd.h	/^typedef uint32_t (*device_func)(ClientStat *client,void * data);$/;"	t
dict	redis_dict/dict.h	/^typedef struct dict {$/;"	s
dict	redis_dict/dict.h	/^} dict;$/;"	t	typeref:struct:dict
dictAdd	redis_dict/dict.c	/^int dictAdd(dict *d, void *key, void *val)$/;"	f
dictAddRaw	redis_dict/dict.c	/^dictEntry *dictAddRaw(dict *d, void *key)$/;"	f
dictCompareKeys	redis_dict/dict.h	137;"	d
dictCreate	redis_dict/dict.c	/^dict *dictCreate(dictType *type,$/;"	f
dictDelete	redis_dict/dict.c	/^int dictDelete(dict *ht, const void *key) {$/;"	f
dictDeleteNoFree	redis_dict/dict.c	/^int dictDeleteNoFree(dict *ht, const void *key) {$/;"	f
dictDisableResize	redis_dict/dict.c	/^void dictDisableResize(void) {$/;"	f
dictEmpty	redis_dict/dict.c	/^void dictEmpty(dict *d, void(callback)(void*)) {$/;"	f
dictEnableResize	redis_dict/dict.c	/^void dictEnableResize(void) {$/;"	f
dictEntry	redis_dict/dict.h	/^typedef struct dictEntry {$/;"	s
dictEntry	redis_dict/dict.h	/^} dictEntry;$/;"	t	typeref:struct:dictEntry
dictExpand	redis_dict/dict.c	/^int dictExpand(dict *d, unsigned long size)$/;"	f
dictFetchValue	redis_dict/dict.c	/^void *dictFetchValue(dict *d, const void *key) {$/;"	f
dictFind	redis_dict/dict.c	/^dictEntry *dictFind(dict *d, const void *key)$/;"	f
dictFingerprint	redis_dict/dict.c	/^long long dictFingerprint(dict *d) {$/;"	f
dictFreeKey	redis_dict/dict.h	126;"	d
dictFreeVal	redis_dict/dict.h	106;"	d
dictGenCaseHashFunction	redis_dict/dict.c	/^unsigned int dictGenCaseHashFunction(const unsigned char *buf, int len) {$/;"	f
dictGenHashFunction	redis_dict/dict.c	/^unsigned int dictGenHashFunction(const void *key, int len) {$/;"	f
dictGenericDelete	redis_dict/dict.c	/^static int dictGenericDelete(dict *d, const void *key, int nofree)$/;"	f	file:
dictGetDoubleVal	redis_dict/dict.h	147;"	d
dictGetHashFunctionSeed	redis_dict/dict.c	/^uint32_t dictGetHashFunctionSeed(void) {$/;"	f
dictGetIterator	redis_dict/dict.c	/^dictIterator *dictGetIterator(dict *d)$/;"	f
dictGetKey	redis_dict/dict.h	143;"	d
dictGetRandomKey	redis_dict/dict.c	/^dictEntry *dictGetRandomKey(dict *d)$/;"	f
dictGetSafeIterator	redis_dict/dict.c	/^dictIterator *dictGetSafeIterator(dict *d) {$/;"	f
dictGetSignedIntegerVal	redis_dict/dict.h	145;"	d
dictGetSomeKeys	redis_dict/dict.c	/^unsigned int dictGetSomeKeys(dict *d, dictEntry **des, unsigned int count) {$/;"	f
dictGetStats	redis_dict/dict.c	/^void dictGetStats(char *buf, size_t bufsize, dict *d) {$/;"	f
dictGetUnsignedIntegerVal	redis_dict/dict.h	146;"	d
dictGetVal	redis_dict/dict.h	144;"	d
dictHashKey	redis_dict/dict.h	142;"	d
dictIntHashFunction	redis_dict/dict.c	/^unsigned int dictIntHashFunction(unsigned int key)$/;"	f
dictIsRehashing	redis_dict/dict.h	150;"	d
dictIterator	redis_dict/dict.h	/^typedef struct dictIterator {$/;"	s
dictIterator	redis_dict/dict.h	/^} dictIterator;$/;"	t	typeref:struct:dictIterator
dictNext	redis_dict/dict.c	/^dictEntry *dictNext(dictIterator *iter)$/;"	f
dictRehash	redis_dict/dict.c	/^int dictRehash(dict *d, int n) {$/;"	f
dictRehashMilliseconds	redis_dict/dict.c	/^int dictRehashMilliseconds(dict *d, int ms) {$/;"	f
dictRelease	redis_dict/dict.c	/^void dictRelease(dict *d)$/;"	f
dictReleaseIterator	redis_dict/dict.c	/^void dictReleaseIterator(dictIterator *iter)$/;"	f
dictReplace	redis_dict/dict.c	/^int dictReplace(dict *d, void *key, void *val)$/;"	f
dictReplaceRaw	redis_dict/dict.c	/^dictEntry *dictReplaceRaw(dict *d, void *key) {$/;"	f
dictResize	redis_dict/dict.c	/^int dictResize(dict *d)$/;"	f
dictScan	redis_dict/dict.c	/^unsigned long dictScan(dict *d,$/;"	f
dictScanFunction	redis_dict/dict.h	/^typedef void (dictScanFunction)(void *privdata, const dictEntry *de);$/;"	t
dictSetDoubleVal	redis_dict/dict.h	123;"	d
dictSetHashFunctionSeed	redis_dict/dict.c	/^void dictSetHashFunctionSeed(uint32_t seed) {$/;"	f
dictSetKey	redis_dict/dict.h	130;"	d
dictSetSignedIntegerVal	redis_dict/dict.h	117;"	d
dictSetUnsignedIntegerVal	redis_dict/dict.h	120;"	d
dictSetVal	redis_dict/dict.h	110;"	d
dictSize	redis_dict/dict.h	149;"	d
dictSlots	redis_dict/dict.h	148;"	d
dictType	redis_dict/dict.h	/^typedef struct dictType {$/;"	s
dictType	redis_dict/dict.h	/^} dictType;$/;"	t	typeref:struct:dictType
dict_can_resize	redis_dict/dict.c	/^static int dict_can_resize = 1;$/;"	v	file:
dict_force_resize_ratio	redis_dict/dict.c	/^static unsigned int dict_force_resize_ratio = 5;$/;"	v	file:
dict_hash_function_seed	redis_dict/dict.c	/^static uint32_t dict_hash_function_seed = 5381;$/;"	v	file:
dictht	redis_dict/dict.h	/^typedef struct dictht {$/;"	s
dictht	redis_dict/dict.h	/^} dictht;$/;"	t	typeref:struct:dictht
dicttype	Z_my_work_memcached/cmd.c	/^dictType dicttype = $/;"	v
do_protocol	Z_my_work_atom/cmd.c	/^uint32_t do_protocol(ClientStat * arg)$/;"	f
entry	redis_dict/dict.h	/^    dictEntry *entry, *nextEntry;$/;"	m	struct:dictIterator
epfd	ae/ae/ae_epoll.c	/^    int epfd;$/;"	m	struct:aeApiState	file:
events	ae/ae.h	/^    aeFileEvent *events; \/* Registered events *\/$/;"	m	struct:aeEventLoop
events	ae/ae/ae_epoll.c	/^    struct epoll_event *events;$/;"	m	struct:aeApiState	typeref:struct:aeApiState::epoll_event	file:
events	ae/ae/ae_kqueue.c	/^    struct kevent *events;$/;"	m	struct:aeApiState	typeref:struct:aeApiState::kevent	file:
evport_debug	ae/ae/ae_evport.c	/^static int evport_debug = 0;$/;"	v	file:
fd	Z_my_work_atom/tcp_server.h	/^    int fd;$/;"	m	struct:ClientStat_s
fd	Z_my_work_memcached/tcp_server.h	/^    int fd;$/;"	m	struct:ClientStat_s
fd	ae/ae.h	/^    int fd;$/;"	m	struct:aeFiredEvent
file_len	Z_my_work_dvoUpgrade/test_client.c	/^    int file_len;$/;"	m	struct:__anon7	file:
file_modtime	Z_my_work_memcached/test_client/ketama.c	/^file_modtime( char* filename )$/;"	f	file:
finalizerProc	ae/ae.h	/^    aeEventFinalizerProc *finalizerProc;$/;"	m	struct:aeTimeEvent
fingerprint	redis_dict/dict.h	/^    long long fingerprint;$/;"	m	struct:dictIterator
fired	ae/ae.h	/^    aeFiredEvent *fired; \/* Fired events *\/$/;"	m	struct:aeEventLoop
gSeq	Z_my_work_atom/tcp_server.h	/^    uint16_t gSeq;$/;"	m	struct:ClientStat_s
global_log_level	log/log.c	/^LOG_LEVEL global_log_level = LOG_NOTICE;$/;"	v
hardware_version	Z_my_work_dvoUpgrade/test_client.c	/^	char hardware_version[32];$/;"	m	struct:upgrade_header_s	file:
hashFunction	redis_dict/dict.h	/^    unsigned int (*hashFunction)(const void *key);$/;"	m	struct:dictType
head	Z_my_work_atom/test_client.c	/^    LotHead head;$/;"	m	struct:__anon5	file:
ht	redis_dict/dict.h	/^    dictht ht[2];$/;"	m	struct:dict
id	Z_my_work_atom/test_client.c	/^    uint8_t id[6];$/;"	m	struct:__anon4	file:
id	ae/ae.h	/^    long long id; \/* time event identifier. *\/$/;"	m	struct:aeTimeEvent
index	redis_dict/dict.h	/^    long index;$/;"	m	struct:dictIterator
index_	Z_my_work_atom/test_client.c	/^static int index_ = 0;$/;"	v	file:
init_dict	Z_my_work_memcached/cmd.c	/^int init_dict(unsigned long size)$/;"	f
init_log_level	log/log.c	/^void  init_log_level(LOG_LEVEL level)$/;"	f
init_sem_id_tracker	Z_my_work_memcached/test_client/ketama.c	/^init_sem_id_tracker() {$/;"	f	file:
init_shm_data_tracker	Z_my_work_memcached/test_client/ketama.c	/^init_shm_data_tracker() {$/;"	f	file:
init_shm_id_tracker	Z_my_work_memcached/test_client/ketama.c	/^init_shm_id_tracker() {$/;"	f	file:
init_socket	Z_my_work_atom/main.c	/^int init_socket()$/;"	f
init_socket	Z_my_work_memcached/main.c	/^int init_socket()$/;"	f
init_tcp_server	Z_my_work_memcached/tcp_server.c	/^int init_tcp_server()$/;"	f
ip	Z_my_work_atom/tcp_server.h	/^    char ip[64];$/;"	m	struct:ClientStat_s
ip	Z_my_work_memcached/tcp_server.h	/^    char ip[64];$/;"	m	struct:ClientStat_s
ip	Z_my_work_memcached/test_client/ketama.h	/^    char ip[22];$/;"	m	struct:__anon9
ip_include	Z_my_work_dvoUpgrade/test_client.c	/^    int ip_include;     \/\/ 0:include ip, 1:not include ip.$/;"	m	struct:__anon7	file:
ip_len	netTool/anet.h	49;"	d
item	Z_my_work_memcached/tcp_server.h	/^    void * item;$/;"	m	struct:__anon13
item_length	Z_my_work_memcached/tcp_server.h	/^    uint32_t item_length[CMD_ARGS_MAX];$/;"	m	struct:Cmd_s
item_length	Z_my_work_memcached/tcp_server.h	/^    uint32_t item_length[CMD_ARGS_MAX];$/;"	m	struct:Response_s
item_pos	Z_my_work_memcached/tcp_server.h	/^    uint32_t item_pos[CMD_ARGS_MAX];$/;"	m	struct:Cmd_s
item_pos	Z_my_work_memcached/tcp_server.h	/^    uint32_t item_pos[CMD_ARGS_MAX];$/;"	m	struct:Response_s
iterators	redis_dict/dict.h	/^    int iterators; \/* number of iterators currently running *\/$/;"	m	struct:dict
k_error	Z_my_work_memcached/test_client/ketama.c	/^char k_error[255] = "";$/;"	v
ketama_compare	Z_my_work_memcached/test_client/ketama.c	/^ketama_compare( mcs *a, mcs *b )$/;"	f
ketama_continuum	Z_my_work_memcached/test_client/ketama.h	/^typedef continuum* ketama_continuum;$/;"	t
ketama_create_continuum	Z_my_work_memcached/test_client/ketama.c	/^ketama_create_continuum( key_t key, char* filename )$/;"	f	file:
ketama_error	Z_my_work_memcached/test_client/ketama.c	/^ketama_error()$/;"	f
ketama_get_server	Z_my_work_memcached/test_client/ketama.c	/^ketama_get_server( char* key, ketama_continuum cont )$/;"	f
ketama_hashi	Z_my_work_memcached/test_client/ketama.c	/^ketama_hashi( char* inString )$/;"	f
ketama_md5_digest	Z_my_work_memcached/test_client/ketama.c	/^ketama_md5_digest( char* inString, unsigned char md5pword[16] )$/;"	f
ketama_print_continuum	Z_my_work_memcached/test_client/ketama.c	/^ketama_print_continuum( ketama_continuum cont )$/;"	f
ketama_roll	Z_my_work_memcached/test_client/ketama.c	/^ketama_roll( ketama_continuum* contptr, char* filename )$/;"	f
ketama_sem_init	Z_my_work_memcached/test_client/ketama.c	/^ketama_sem_init( key_t key )$/;"	f	file:
ketama_sem_lock	Z_my_work_memcached/test_client/ketama.c	/^ketama_sem_lock( int sem_set_id )$/;"	f	file:
ketama_sem_unlock	Z_my_work_memcached/test_client/ketama.c	/^ketama_sem_unlock( int sem_set_id )$/;"	f	file:
ketama_smoke	Z_my_work_memcached/test_client/ketama.c	/^ketama_smoke( ketama_continuum contptr )$/;"	f
key	redis_dict/dict.h	/^    void *key;$/;"	m	struct:dictEntry
keyCompare	redis_dict/dict.h	/^    int (*keyCompare)(void *privdata, const void *key1, const void *key2);$/;"	m	struct:dictType
keyDestructor	redis_dict/dict.h	/^    void (*keyDestructor)(void *privdata, void *key);$/;"	m	struct:dictType
keyDup	redis_dict/dict.h	/^    void *(*keyDup)(void *privdata, const void *key);$/;"	m	struct:dictType
kqfd	ae/ae/ae_kqueue.c	/^    int kqfd;$/;"	m	struct:aeApiState	file:
lastTime	ae/ae.h	/^    time_t lastTime;     \/* Used to detect system clock skew *\/$/;"	m	struct:aeEventLoop
len	Z_my_work_atom/test_client.c	/^    uint16_t len;$/;"	m	struct:__anon4	file:
length	Z_my_work_memcached/tcp_server.h	/^    uint32_t length; $/;"	m	struct:__anon13
mac	Z_my_work_dvoUpgrade/test_client.c	/^        char mac[40];$/;"	m	struct:app_net_tcp_sn_mac_t	file:
magic	Z_my_work_dvoUpgrade/test_client.c	/^	char magic[8];$/;"	m	struct:upgrade_header_s	file:
main	Z_my_work_atom/main.c	/^int main(int argc,char *argv[])$/;"	f
main	Z_my_work_atom/test_client.c	/^int main()$/;"	f
main	Z_my_work_dvoUpgrade/test_client.c	/^int main(int argc,char *argv[])$/;"	f
main	Z_my_work_memcached/main.c	/^int main(int argc,char *argv[])$/;"	f
main	Z_my_work_memcached/test_client/test_client.c	/^int main(int argc,char *argv[])$/;"	f
mask	ae/ae.h	/^    int mask; \/* one of AE_(READABLE|WRITABLE) *\/$/;"	m	struct:aeFileEvent
mask	ae/ae.h	/^    int mask;$/;"	m	struct:aeFiredEvent
maxfd	ae/ae.h	/^    int maxfd;   \/* highest file descriptor currently registered *\/$/;"	m	struct:aeEventLoop
mcs	Z_my_work_memcached/test_client/ketama.h	/^} mcs;$/;"	t	typeref:struct:__anon9
md5	Z_my_work_dvoUpgrade/test_client.c	/^	unsigned char md5[16];$/;"	m	struct:upgrade_header_s	file:
md5_INCLUDED	Z_my_work_memcached/test_client/md5_2.h	51;"	d
md5_append	Z_my_work_memcached/test_client/md5.c	/^md5_append(md5_state_t *pms, const md5_byte_t *data, int nbytes)$/;"	f
md5_block_data_order	md5/md5_dgst.c	/^void md5_block_data_order(MD5_CTX *c, const void *data_, size_t num)$/;"	f
md5_block_data_order	md5/md5_locl.h	18;"	d
md5_block_data_order	md5/md5_locl.h	20;"	d
md5_block_data_order	md5/md5_locl.h	22;"	d
md5_byte_t	Z_my_work_memcached/test_client/md5_2.h	/^typedef unsigned char md5_byte_t; \/* 8-bit byte *\/$/;"	t
md5_finish	Z_my_work_memcached/test_client/md5.c	/^md5_finish(md5_state_t *pms, md5_byte_t digest[16])$/;"	f
md5_init	Z_my_work_memcached/test_client/md5.c	/^md5_init(md5_state_t *pms)$/;"	f
md5_process	Z_my_work_memcached/test_client/md5.c	/^md5_process(md5_state_t *pms, const md5_byte_t *data \/*[64]*\/)$/;"	f	file:
md5_state_s	Z_my_work_memcached/test_client/md5_2.h	/^typedef struct md5_state_s {$/;"	s
md5_state_t	Z_my_work_memcached/test_client/md5_2.h	/^} md5_state_t;$/;"	t	typeref:struct:md5_state_s
md5_word_t	Z_my_work_memcached/test_client/md5_2.h	/^typedef unsigned int md5_word_t; \/* 32-bit word *\/$/;"	t
memory	Z_my_work_memcached/test_client/ketama.h	/^    unsigned long memory;$/;"	m	struct:__anon10
modtime	Z_my_work_memcached/test_client/ketama.h	/^    void* modtime;$/;"	m	struct:__anon11
myHashfunc	Z_my_work_memcached/cmd.c	/^unsigned int myHashfunc(const void *arg)$/;"	f
myKeyconpare	Z_my_work_memcached/cmd.c	/^int myKeyconpare(void *privdata,const void * key1,const void *key2)$/;"	f
myKeyfree	Z_my_work_memcached/cmd.c	/^void myKeyfree(void *pri,void *key)$/;"	f
myValuefree	Z_my_work_memcached/cmd.c	/^void myValuefree(void *pri,void *value)$/;"	f
next	Z_my_work_atom/tcp_server.h	/^    struct ClientStat_s * next;$/;"	m	struct:ClientStat_s	typeref:struct:ClientStat_s::ClientStat_s
next	Z_my_work_memcached/tcp_server.h	/^    struct ClientStat_s * next;$/;"	m	struct:ClientStat_s	typeref:struct:ClientStat_s::ClientStat_s
next	Z_my_work_memcached/tcp_server.h	/^    struct Cmd_s *next;$/;"	m	struct:Cmd_s	typeref:struct:Cmd_s::Cmd_s
next	Z_my_work_memcached/tcp_server.h	/^    struct Response_s *next;$/;"	m	struct:Response_s	typeref:struct:Response_s::Response_s
next	ae/ae.h	/^    struct aeTimeEvent *next;$/;"	m	struct:aeTimeEvent	typeref:struct:aeTimeEvent::aeTimeEvent
next	redis_dict/dict.h	/^    struct dictEntry *next;$/;"	m	struct:dictEntry	typeref:struct:dictEntry::dictEntry
nextEntry	redis_dict/dict.h	/^    dictEntry *entry, *nextEntry;$/;"	m	struct:dictIterator
noHeartbeatPeriod	Z_my_work_atom/tcp_server.h	/^    uint32_t noHeartbeatPeriod;\/\/In seconds$/;"	m	struct:ClientStat_s
npending	ae/ae/ae_evport.c	/^    int     npending;                           \/* # of pending fds *\/$/;"	m	struct:aeApiState	file:
num	md5/md5.h	/^    unsigned int num;$/;"	m	struct:MD5state_st
num_1	Z_my_work_memcached/cmd.c	/^char *num_1 = "*1\\r\\n";$/;"	v
num_data	Z_my_work_memcached/test_client/ketama.c	/^int num_data = 0;$/;"	v
num_sem_ids	Z_my_work_memcached/test_client/ketama.c	/^int num_sem_ids = 0;$/;"	v
num_shm_ids	Z_my_work_memcached/test_client/ketama.c	/^int num_shm_ids = 0;$/;"	v
numpoints	Z_my_work_memcached/test_client/ketama.h	/^    int numpoints;$/;"	m	struct:__anon11
pending_fds	ae/ae/ae_evport.c	/^    int     pending_fds[MAX_EVENT_BATCHSZ];     \/* pending fds *\/$/;"	m	struct:aeApiState	file:
pending_masks	ae/ae/ae_evport.c	/^    int     pending_masks[MAX_EVENT_BATCHSZ];   \/* pending fds' masks *\/$/;"	m	struct:aeApiState	file:
point	Z_my_work_memcached/test_client/ketama.h	/^    unsigned int point;  \/\/ point on circle$/;"	m	struct:__anon9
port	Z_my_work_atom/tcp_server.h	/^    int port;$/;"	m	struct:ClientStat_s
port	Z_my_work_memcached/tcp_server.h	/^    int port;$/;"	m	struct:ClientStat_s
portfd	ae/ae/ae_evport.c	/^    int     portfd;                             \/* event port *\/$/;"	m	struct:aeApiState	file:
pre	Z_my_work_atom/tcp_server.h	/^    struct ClientStat_s * pre;$/;"	m	struct:ClientStat_s	typeref:struct:ClientStat_s::ClientStat_s
pre	Z_my_work_memcached/tcp_server.h	/^    struct ClientStat_s * pre;$/;"	m	struct:ClientStat_s	typeref:struct:ClientStat_s::ClientStat_s
print_usage	Z_my_work_dvoUpgrade/test_client.c	/^void print_usage()$/;"	f
privdata	redis_dict/dict.h	/^    void *privdata;$/;"	m	struct:dict
processTimeEvents	ae/ae.c	/^static int processTimeEvents(aeEventLoop *eventLoop) {$/;"	f	file:
read_data	Z_my_work_memcached/test_client/test_client.c	/^void * read_data(void *arg)$/;"	f
read_server_definitions	Z_my_work_memcached/test_client/ketama.c	/^read_server_definitions( char* filename, unsigned int* count, unsigned long* memory )$/;"	f	file:
read_server_line	Z_my_work_memcached/test_client/ketama.c	/^read_server_line( char* line )$/;"	f	file:
readn	Z_my_work_atom/test_client.c	/^int readn(int fd,uint8_t * buf,int size)$/;"	f
readn	netTool/netTool.c	/^int readn(int fd,uint8_t * buf,int size,int max_null_milliseconds)$/;"	f
recv_cmd	Z_my_work_atom/tcp_server.h	/^    uint8_t recv_cmd[CLIENT_RECV_CMD_LENGTH];$/;"	m	struct:ClientStat_s
recv_cmd	Z_my_work_memcached/tcp_server.h	/^    char recv_cmd[CLIENT_RECV_CMD_LENGTH];$/;"	m	struct:ClientStat_s
recv_cmd_handle	Z_my_work_atom/tcp_server.c	/^void recv_cmd_handle(struct aeEventLoop *eventloop,int fd,void *clientData,int mask)$/;"	f
recv_cmd_handle	Z_my_work_memcached/tcp_server.c	/^void recv_cmd_handle(struct aeEventLoop *eventloop,int fd,void *clientData,int mask)$/;"	f
recv_cmd_queue_head	Z_my_work_memcached/tcp_server.h	/^    Cmd *recv_cmd_queue_head; $/;"	m	struct:ClientStat_s
recv_cmd_queue_tail	Z_my_work_memcached/tcp_server.h	/^    Cmd *recv_cmd_queue_tail; $/;"	m	struct:ClientStat_s
recv_pos	Z_my_work_atom/tcp_server.h	/^    int recv_pos;$/;"	m	struct:ClientStat_s
recv_pos	Z_my_work_memcached/tcp_server.h	/^    int recv_pos;$/;"	m	struct:ClientStat_s
recv_trigger	Z_my_work_atom/test_client.c	/^void * recv_trigger(void * arg)$/;"	f
register_addr	Z_my_work_atom/test_client.c	/^    uint8_t register_addr;$/;"	m	struct:__anon6	file:
rehashidx	redis_dict/dict.h	/^    long rehashidx; \/* rehashing not in progress if rehashidx == -1 *\/$/;"	m	struct:dict
reserve	Z_my_work_dvoUpgrade/test_client.c	/^    int reserve[4];$/;"	m	struct:__anon7	file:
rev	Z_my_work_dvoUpgrade/test_client.c	/^	char rev[72];$/;"	m	struct:upgrade_header_s	file:
rev	Z_my_work_dvoUpgrade/test_client.c	/^        char rev[88];$/;"	m	struct:app_net_tcp_sn_mac_t	file:
rev	redis_dict/dict.c	/^static unsigned long rev(unsigned long v) {$/;"	f	file:
rfds	ae/ae/ae_select.c	/^    fd_set rfds, wfds;$/;"	m	struct:aeApiState	file:
rfileProc	ae/ae.h	/^    aeFileProc *rfileProc;$/;"	m	struct:aeFileEvent
s64	redis_dict/dict.h	/^        int64_t s64;$/;"	m	union:dictEntry::__anon2
safe	redis_dict/dict.h	/^    int table, safe;$/;"	m	struct:dictIterator
save_log	log/log.c	/^int save_log(const char *str, ...)$/;"	f
sem_ids	Z_my_work_memcached/test_client/ketama.c	/^int *sem_ids = NULL;$/;"	v
sem_ids_size	Z_my_work_memcached/test_client/ketama.c	/^int sem_ids_size = 1024;$/;"	v
semun	Z_my_work_memcached/test_client/ketama.h	/^union semun$/;"	u
send_cmd	Z_my_work_atom/test_client.c	/^void send_cmd(int fd)$/;"	f
send_data	Z_my_work_memcached/test_client/test_client.c	/^void* send_data(void *arg)$/;"	f
send_file	Z_my_work_dvoUpgrade/test_client.c	/^int send_file(int fd,int file_fd)$/;"	f
send_pos	Z_my_work_atom/tcp_server.h	/^    int send_pos;$/;"	m	struct:ClientStat_s
send_pos	Z_my_work_memcached/tcp_server.h	/^    int send_pos;$/;"	m	struct:ClientStat_s
send_response	Z_my_work_atom/tcp_server.h	/^    uint8_t send_response[CLIENT_SEND_RESPONSE_LENGTH];$/;"	m	struct:ClientStat_s
send_response	Z_my_work_memcached/tcp_server.h	/^    char send_response[CLIENT_SEND_RESPONSE_LENGTH];$/;"	m	struct:ClientStat_s
send_response_handle	Z_my_work_atom/tcp_server.c	/^void send_response_handle(struct aeEventLoop *eventloop,int fd,void *clientData,int mask)$/;"	f
send_response_handle	Z_my_work_memcached/tcp_server.c	/^void send_response_handle(struct aeEventLoop *eventloop,int fd,void *clientData,int mask)$/;"	f
send_response_queue_head	Z_my_work_memcached/tcp_server.h	/^    Response *send_response_queue_head ;$/;"	m	struct:ClientStat_s
send_response_queue_tail	Z_my_work_memcached/tcp_server.h	/^    Response *send_response_queue_tail ;$/;"	m	struct:ClientStat_s
seq	Z_my_work_atom/test_client.c	/^    uint16_t seq;$/;"	m	struct:__anon4	file:
server_accept_handle	Z_my_work_atom/tcp_server.c	/^void server_accept_handle(struct aeEventLoop *eventloop,int fd,void *clientData,int mask)$/;"	f
server_accept_handle	Z_my_work_memcached/tcp_server.c	/^void server_accept_handle(struct aeEventLoop *eventloop,int fd,void *clientData,int mask)$/;"	f
server_fd	Z_my_work_atom/tcp_server.h	/^    int server_fd;$/;"	m	struct:__anon3
server_fd	Z_my_work_memcached/tcp_server.h	/^    int server_fd;$/;"	m	struct:__anon12
server_log	log/log.h	20;"	d
server_stat	Z_my_work_atom/main.c	/^ServerStat server_stat;$/;"	v
server_stat	Z_my_work_memcached/main.c	/^ServerStat server_stat;$/;"	v
serverinfo	Z_my_work_memcached/test_client/ketama.h	/^} serverinfo;$/;"	t	typeref:struct:__anon10
set_err_str	Z_my_work_memcached/cmd.c	/^char *set_err_str = "*1\\r\\nS3\\r\\nERR\\r\\n";$/;"	v
set_error	Z_my_work_memcached/test_client/ketama.c	/^set_error(const char *format, ...) {$/;"	f	file:
set_ok_str	Z_my_work_memcached/cmd.c	/^char *set_ok_str = "*1\\r\\n$2\\r\\nOK\\r\\n";$/;"	v
setsize	ae/ae.h	/^    int setsize; \/* max number of file descriptors tracked *\/$/;"	m	struct:aeEventLoop
shm_data	Z_my_work_memcached/test_client/ketama.c	/^int **shm_data = NULL;$/;"	v
shm_data_size	Z_my_work_memcached/test_client/ketama.c	/^int shm_data_size = 1024;$/;"	v
shm_ids	Z_my_work_memcached/test_client/ketama.c	/^int *shm_ids = NULL;$/;"	v
shm_ids_size	Z_my_work_memcached/test_client/ketama.c	/^int shm_ids_size = 1024;$/;"	v
shutdownNow	Z_my_work_atom/main.c	/^void shutdownNow(int arg)$/;"	f
shutdownNow	Z_my_work_memcached/main.c	/^void shutdownNow(int arg)$/;"	f
simple	Z_my_work_memcached/test_client/test_client.c	/^void simple()$/;"	f
size	redis_dict/dict.h	/^    unsigned long size;$/;"	m	struct:dictht
sizemask	redis_dict/dict.h	/^    unsigned long sizemask;$/;"	m	struct:dictht
sn	Z_my_work_dvoUpgrade/test_client.c	/^        char sn[32];$/;"	m	struct:app_net_tcp_sn_mac_t	file:
start	Z_my_work_atom/test_client.c	/^    uint8_t start;$/;"	m	struct:__anon4	file:
start	Z_my_work_memcached/test_client/test_client.c	/^int start = 0;$/;"	v
stop	ae/ae.h	/^    int stop;$/;"	m	struct:aeEventLoop
table	redis_dict/dict.h	/^    dictEntry **table;$/;"	m	struct:dictht
table	redis_dict/dict.h	/^    int table, safe;$/;"	m	struct:dictIterator
tag	Z_my_work_atom/test_client.c	/^    uint8_t tag;$/;"	m	struct:__anon6	file:
tagMsgHead_t	Z_my_work_dvoUpgrade/test_client.c	/^typedef struct tagMsgHead_t$/;"	s	file:
tagMsgHead_t	Z_my_work_dvoUpgrade/test_client.c	/^}tagMsgHead_t;$/;"	t	typeref:struct:tagMsgHead_t	file:
timeEventHead	ae/ae.h	/^    aeTimeEvent *timeEventHead;$/;"	m	struct:aeEventLoop
timeEventNextId	ae/ae.h	/^    long long timeEventNextId;$/;"	m	struct:aeEventLoop
timeInMilliseconds	redis_dict/dict.c	/^long long timeInMilliseconds(void) {$/;"	f
timeProc	ae/ae.h	/^    aeTimeProc *timeProc;$/;"	m	struct:aeTimeEvent
time_event_id	Z_my_work_atom/tcp_server.h	/^    long long time_event_id[5];$/;"	m	struct:ClientStat_s
total_frame	Z_my_work_dvoUpgrade/test_client.c	/^    int total_frame;$/;"	m	struct:__anon7	file:
track_sem_id	Z_my_work_memcached/test_client/ketama.c	/^track_sem_id(int semid) {$/;"	f	file:
track_shm_data	Z_my_work_memcached/test_client/ketama.c	/^track_shm_data(int *data) {$/;"	f	file:
track_shm_id	Z_my_work_memcached/test_client/ketama.c	/^track_shm_id(int shmid) {$/;"	f	file:
type	redis_dict/dict.h	/^    dictType *type;$/;"	m	struct:dict
u64	redis_dict/dict.h	/^        uint64_t u64;$/;"	m	union:dictEntry::__anon2
upgrade_head_t	Z_my_work_dvoUpgrade/test_client.c	/^} upgrade_head_t;$/;"	t	typeref:struct:upgrade_header_s	file:
upgrade_header_s	Z_my_work_dvoUpgrade/test_client.c	/^typedef struct upgrade_header_s {$/;"	s	file:
used	redis_dict/dict.h	/^    unsigned long used;$/;"	m	struct:dictht
v	redis_dict/dict.h	/^    } v;$/;"	m	struct:dictEntry	typeref:union:dictEntry::__anon2
val	Z_my_work_memcached/test_client/ketama.h	/^    int val;              \/* used for SETVAL only *\/$/;"	m	union:semun
val	redis_dict/dict.h	/^        void *val;$/;"	m	union:dictEntry::__anon2
valDestructor	redis_dict/dict.h	/^    void (*valDestructor)(void *privdata, void *obj);$/;"	m	struct:dictType
valDup	redis_dict/dict.h	/^    void *(*valDup)(void *privdata, const void *obj);$/;"	m	struct:dictType
value	Z_my_work_memcached/tcp_server.h	/^    char *value[CMD_ARGS_MAX];$/;"	m	struct:Cmd_s
value	Z_my_work_memcached/tcp_server.h	/^    char *value[CMD_ARGS_MAX];$/;"	m	struct:Response_s
wfds	ae/ae/ae_select.c	/^    fd_set rfds, wfds;$/;"	m	struct:aeApiState	file:
wfileProc	ae/ae.h	/^    aeFileProc *wfileProc;$/;"	m	struct:aeFileEvent
when_ms	ae/ae.h	/^    long when_ms; \/* milliseconds *\/$/;"	m	struct:aeTimeEvent
when_sec	ae/ae.h	/^    long when_sec; \/* seconds *\/$/;"	m	struct:aeTimeEvent
writen	netTool/netTool.c	/^int writen(int fd,uint8_t * buf,int size,int max_null_milliseconds)$/;"	f
